/*Considerar estas seis personas:

Julieta, una persona genérica de 42 años.
Ana, una atleta de 25 años.
Rosa, una atleta de 45 años que conoce 8 técnicas.
Perla, una atleta de 28 años que conoce 4 técnicas, y de masa muscular 6.
Mónica, una docente de 45 años que dio 6 cursos.
Luisa, una docente de 35 años que dio un curso.
Considerar el planeta Tritón, que tiene a estas seis personas como habitantes. Verificar que:

la delegación diplomática está formada por Ana, Rosa y Mónica
el valor inicial de defensa es 2
no es un planeta culto
la potencia real es 184
Sugerencia: definir a las personas como un Set (o sea #{...}) y no como un List (o sea, [...]). Así se va a simplificar el chequeo de la delegación diplomática.


Finalmente, en un test aparte, hacer que Perla entrene 15 días y aprenda una técnica. Después de eso, la potencia tiene que ser 65, y todavía no tiene que ser destacada. Después hacer que aprenda una técnica más. Después de aprender esta segunda técnica adicional, Perla tiene que ser destacada.
*/

import tpPlanetas.*
const julieta = new Persona(edad=42)
const ana = new Atleta(edad=25)
const rosa = new Atleta(edad=45, tecnicas=8)
const perla = new Atleta(edad=28, tecnicas=4, masaMuscular=6)
const monica = new Docente(edad=45, cursosDados=6)
const luisa = new Docente(edad=35, cursosDados=1)

test "informacion julieta" {
  assert.equals(8, julieta.inteligencia())
  assert.equals(false, julieta.esDestacada())
  assert.equals(20, julieta.potencia())
}

test "informacion ana" {
  assert.equals(28, ana.potencia())
  assert.equals(12, ana.inteligencia())
  assert.equals(true, ana.esDestacada())
}

test "informacion rosa" {
  assert.equals(52, rosa.potencia())
  assert.equals(8, rosa.inteligencia())
  assert.equals(true, rosa.esDestacada())
}

test "informacion perla" {
  assert.equals(44, perla.potencia())
  assert.equals(12, perla.inteligencia())
  assert.equals(false, perla.esDestacada())
}

test "informacion monica" {
    assert.equals(20, monica.potencia())
  assert.equals(20, monica.inteligencia())
  assert.equals(true, monica.esDestacada())
}

test "informacion luisa" {
  assert.equals(20, luisa.potencia())
  assert.equals(14, luisa.inteligencia())
  assert.equals(false, luisa.esDestacada())
}

const triton = new Planeta(habitantes=#{ana, rosa, perla, monica, luisa, julieta}, murallas=2, museos=0)

test "informacion triton" {
  assert.equals(#{ana, rosa, monica}, triton.delegacionDiplomatica())
    assert.equals(2, triton.murallas())
    assert.equals(false,triton.esCulto())
    assert.equals(184, triton.potenciaReal())
}
